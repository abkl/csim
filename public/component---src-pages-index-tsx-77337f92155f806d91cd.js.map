{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/components/primatives/button.tsx","webpack:///./src/components/primatives/link.tsx","webpack:///./src/components/seo.tsx"],"names":["Box","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","posed","div","visible","y","hidden","target","name","styles","AnimatedBox","_useState","useState","isVisible","state","changeState","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","pose","_components_primatives_button__WEBPACK_IMPORTED_MODULE_4__","onClick","assign","IndexPage","react__WEBPACK_IMPORTED_MODULE_3___default","a","Fragment","_components_seo__WEBPACK_IMPORTED_MODULE_6__","title","description","keywords","_components_primatives_link__WEBPACK_IMPORTED_MODULE_5__","to","Button","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","props","theme","primary","red","__webpack_exports__","Link","shadow","light","dark","SEO","_ref","_ref$lang","lang","_ref$meta","meta","_ref$keywords","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"+KAMMA,EAAMC,OAAAC,EAAA,EAAAD,CACVE,IAAMC,IAAI,CACRC,QAAS,CACPC,EAAG,GAELC,OAAQ,CACND,EAAG,OANG,CAAAE,OAAA,aAAAP,CAAH,CAAAQ,KAAA,UAAAC,OAAA,6FAgBHC,EAAc,WAAM,IAAAC,EACKC,mBAAS,CAAEC,WAAW,IAA5CC,EADiBH,EAAA,GACVI,EADUJ,EAAA,GAGxB,OACEX,OAAAgB,EAAA,EAAAhB,CAAA,WACEA,OAAAgB,EAAA,EAAAhB,CAACD,EAAD,CAAKkB,KAAMH,EAAMD,UAAY,UAAY,WACzCb,OAAAgB,EAAA,EAAAhB,CAACkB,EAAA,EAAD,CACEC,QAAS,kBAAMJ,EAAWf,OAAAoB,OAAA,GAAMN,EAAN,CAAaD,WAAYC,EAAMD,eAD3D,sBAsBSQ,UAdG,kBAChBrB,OAAAgB,EAAA,EAAAhB,CAAAsB,EAAAC,EAAAC,SAAA,KACExB,OAAAgB,EAAA,EAAAhB,CAACyB,EAAA,EAAD,CACEC,MAAM,OACNC,YAAY,qCACZC,SAAU,yCAEZ5B,OAAAgB,EAAA,EAAAhB,CAAA,yBACAA,OAAAgB,EAAA,EAAAhB,CAAA,sDACAA,OAAAgB,EAAA,EAAAhB,CAAC6B,EAAA,EAAD,CAAMC,GAAG,kBAAT,iBACA9B,OAAAgB,EAAA,EAAAhB,CAACU,EAAD,uDCzCEqB,EAAS/B,OAAAgC,EAAA,EAAAhC,CAAA,UAAHO,OAAA,YAAGP,CAAH,0HAIU,SAAAiC,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,KAJvC,+HAYY,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,KAZzC,kBAiBGL,6DCnBAM,EAAA,EAAArC,OAAAgC,EAAA,EAAAhC,CAAOsC,OAAP,CAAA/B,OAAA,cAAf,SACW,SAAA0B,GAAK,OAAIA,EAAMC,MAAMK,OAAOC,OADvC,mBAGa,SAAAP,GAAK,OAAIA,EAAMC,MAAMK,OAAOE,MAHzC,6FC8EeC,IA7Ef,SAAAC,GAMa,IALXhB,EAKWgB,EALXhB,YAKWiB,EAAAD,EAJXE,YAIW,IAAAD,EAJJ,KAIIA,EAAAE,EAAAH,EAHXI,YAGW,IAAAD,EAHJ,GAGIA,EAAAE,EAAAL,EAFXf,gBAEW,IAAAoB,EAFA,GAEAA,EADXtB,EACWiB,EADXjB,MAEA,OACE1B,OAAAiD,EAAA,EAAAjD,CAACkD,EAAA,YAAD,CACEC,MAAOC,EACPC,OAAQ,SAAAC,GACN,IAAMC,EACJ5B,GAAe2B,EAAKE,KAAKC,aAAa9B,YACxC,OACE3B,OAAAiD,EAAA,EAAAjD,CAAC0D,EAAAnC,EAAD,CACEoC,eAAgB,CACdd,QAEFnB,MAAOA,EACPkC,cAAa,QAAUN,EAAKE,KAAKC,aAAa/B,MAC9CqB,KAAM,CACJ,CACEvC,KAAI,cACJqD,QAASN,GAEX,CACEO,SAAQ,WACRD,QAASnC,GAEX,CACEoC,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACErD,KAAI,eACJqD,QAAO,WAET,CACErD,KAAI,kBACJqD,QAASP,EAAKE,KAAKC,aAAaM,QAElC,CACEvD,KAAI,gBACJqD,QAASnC,GAEX,CACElB,KAAI,sBACJqD,QAASN,IAGVS,OACCpC,EAASqC,OAAS,EACd,CACEzD,KAAI,WACJqD,QAASjC,EAASsC,KAAT,OAEX,IAELF,OAAOjB,MAtDlBO,KAAAa,KAuEJ,IAAMf,EAAY","file":"component---src-pages-index-tsx-77337f92155f806d91cd.js","sourcesContent":["import React, { useState } from \"react\"\nimport Button from \"../components/primatives/button\"\nimport styled from \"@emotion/styled\"\nimport Link from \"../components/primatives/link\"\nimport SEO from \"../components/seo\"\nimport posed from \"react-pose\"\nconst Box = styled(\n  posed.div({\n    visible: {\n      y: 0,\n    },\n    hidden: {\n      y: 100,\n    },\n  })\n)`\n  width: 100px;\n  height: 100px;\n  background: #ff1c68;\n  transform-origin: 50% 50%;\n  border-radius: 100%;\n`\nconst AnimatedBox = () => {\n  const [state, changeState] = useState({ isVisible: true })\n\n  return (\n    <div>\n      <Box pose={state.isVisible ? \"visible\" : \"hidden\"} />\n      <Button\n        onClick={() => changeState({ ...state, isVisible: !state.isVisible })}\n      >\n        Click to animate\n      </Button>\n    </div>\n  )\n}\nconst IndexPage = () => (\n  <>\n    <SEO\n      title=\"Home\"\n      description=\"Scouting Application for Team 4159\"\n      keywords={[`scouting`, `application`, `Team 4159`]}\n    />\n    <h1>Hello guys!</h1>\n    <p>Welcolme to the 2019 Scouting Application</p>\n    <Link to=\"/scouting-form\">Scouting Form</Link>\n    <AnimatedBox />\n  </>\n)\n\nexport default IndexPage\n","import styled from \"@emotion/styled\"\n\ninterface ButtonProps {\n  primary: boolean\n}\nconst Button = styled.button`\n  min-width: 2rem;\n  padding: 6px 16px;\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.1), 0 6px 20px 0 rgba(0, 0, 0, 0.09);\n  border: 2px solid ${props => props.theme.primary.red};\n  border-radius: 4px;\n  outline: none;\n  font-size: 14px;\n  text-decoration: none;\n  background: none;\n  color: #c41e3a;\n  &:active {\n    background-color: ${props => props.theme.primary.red};\n    color: white;\n  }\n`\n\nexport default Button\n","import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nexport default styled(Link)`\n  color: ${props => props.theme.shadow.light};\n  &:active {\n    color: ${props => props.theme.shadow.dark};\n  }\n`\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({\n  description,\n  lang = \"en\",\n  meta = [],\n  keywords = [],\n  title,\n}: SEOProps) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\ninterface SEOProps {\n  description: string\n  lang?: string\n  meta?: any[]\n  keywords?: string[]\n  title: string\n}\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}