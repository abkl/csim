{"version":3,"sources":["webpack:///./src/components/form-components/counter.tsx","webpack:///./src/components/form-components/form-util.ts","webpack:///./src/components/form-components/form-template.tsx","webpack:///./src/utils/game-values.ts","webpack:///./src/pages/scouting-form.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/typography.ts","webpack:///./src/components/app-bar.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/components/button.tsx"],"names":["counter","_ref","name","value","onChange","Object","core_browser_esm","components_button","type","onClick","parseInt","initiallizeFormState","fields","reduce","state","field","_Object$assign","_Object$assign2","test","assign","createValidateObject","shape","vobj","_Object$assign3","_Object$assign4","Yup","min","required","comments","DisplayFormikState","props","css","form_template_ref","_ref2","_ref3","JSON","stringify","DisplayFields","react_default","a","Fragment","map","setFieldValue","values","key","formik_esm","component","DisplayRadio","options","placeholder","option","index","form_template","_ref4","initialValues","onSubmit","_ref5","setSubmitting","console","log","fetch","proxyurl","method","body","headers","Content-Type","then","r","catch","validationSchema","handleSubmit","form_template_DisplayFields","filter","disabled","isSubmitting","form_template_DisplayFormikState","__webpack_exports__","layout","StaticQueryContext","React","createContext","StaticQuery","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","data","query","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","json","typography","Typography","kirkhamTheme","rhythm","Header","siteTitle","gatsby_browser_entry","to","css_browser_esm","color","textDecoration","Layout","app_bar","site","siteMetadata","title","_755544856","Button","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","styles"],"mappings":"yKAOeA,EAAA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,MAAOC,EAAhBH,EAAgBG,SAAhB,OACbC,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,aAAQH,GACRG,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CACEC,KAAK,SACLC,QAAS,kBACPC,SAASP,IAAU,EAAIC,EAASM,SAASP,GAAS,GAAK,KAH3D,KAQAE,OAAAC,EAAA,EAAAD,CAAA,aAAQF,GACRE,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CACEC,KAAK,SACLC,QAAS,kBAAOC,SAASP,GAASC,EAASM,SAASP,GAAS,GAAK,KAFpE,iCClBSQ,EAAuB,SAClCC,GADkC,OAGlCA,EAAOC,OAAO,SAACC,EAAOC,GACO,IAAAC,EAKpBC,EALP,MAAI,UAAUC,KAAKH,GACjBV,OAAAc,OAAA,GACKL,IADLE,EAAA,IAEGD,GAAQ,IAFXC,IAKAX,OAAAc,OAAA,GACKL,IADLG,EAAA,IAEGF,GAAQ,GAFXE,KAKD,KAEQG,EAAuB,SAACR,GACnC,IAAMS,EAAQT,EAAOC,OACnB,SAACS,EAAMP,GAAP,IAAAQ,EAAAC,EAAA,MACE,UAAUN,KAAKH,GAAfV,OAAAc,OAAA,GAESG,IAFTC,EAAA,IAGOR,GAAQU,WAAaC,IAAI,EAAG,4BAHnCH,EAIM,kBAAkBE,WAAaE,SAC7B,oCALRJ,EAOM,gBAAgBE,WAAaE,SAAS,0BAP5CJ,EAQMK,SAAUH,WARhBF,IAAAlB,OAAAc,OAAA,GAWSG,IAXTE,EAAA,IAYOT,GAAQU,WAZfD,EAaM,kBAAkBC,WAAaE,SAC7B,oCAdRH,EAgBM,gBAAgBC,WAAaE,SAAS,0BAhB5CH,EAiBMI,SAAUH,WAjBhBD,KAmBF,IAEF,OAAOC,WAAaJ,MAAMA,iLCrCfQ,EAAqB,SAACC,GAAD,OAChCzB,OAAAC,EAAA,EAAAD,CAAA,OAAK0B,IAAGC,GACN3B,OAAAC,EAAA,EAAAD,CAAA,MAAI0B,IAAGE,IACP5B,OAAAC,EAAA,EAAAD,CAAA,OACE0B,IAAGG,GAMH7B,OAAAC,EAAA,EAAAD,CAAA,uBAPF,MAO4B8B,KAAKC,UAAUN,EAAO,KAAM,MAI/CO,EAAgB,SAACP,GAAD,OAK3BzB,OAAAC,EAAA,EAAAD,CAAAiC,EAAAC,EAAAC,SAAA,KACGV,EAAMlB,OAAO6B,IAAI,SAAA1B,GAChB,MAAI,UAAUG,KAAKH,GAEfV,OAAAC,EAAA,EAAAD,CAACL,EAAD,CACEE,KAAMa,EACNX,SAAU,SAAAD,GAAK,OAAI2B,EAAMY,cAAc3B,EAAOZ,IAC9CA,MAAO2B,EAAMa,OAAO5B,GACpB6B,IAAK7B,IAGA,QAAQG,KAAKH,IAAU,QAAQG,KAAKH,GAE3CV,OAAAC,EAAA,EAAAD,CAACwC,EAAA,EAAD,CACEC,UAAWC,EACX7C,KAAMa,EACNiC,QAAS,CAAC,MAAO,MACjBJ,IAAK7B,IAIFV,OAAAC,EAAA,EAAAD,CAACwC,EAAA,EAAD,CAAOD,IAAK7B,EAAOb,KAAMa,EAAOkC,YAAalC,QAK/CgC,EAAe,SAACjB,GAAD,OAC1BzB,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,UAAKyB,EAAMf,MAAMb,MAChB4B,EAAMkB,QAAQP,IAAI,SAACS,EAAQC,GAAT,OACjB9C,OAAAC,EAAA,EAAAD,CAACiC,EAAAC,EAAMC,SAAP,CAAgBI,IAAKM,GACnB7C,OAAAC,EAAA,EAAAD,CAAA,SACED,SAAU0B,EAAMf,MAAMX,SACtBF,KAAM4B,EAAMf,MAAMb,KAClBC,MAAO+C,EACP1C,KAAK,UAEN0C,EAPH,IAOW7C,OAAAC,EAAA,EAAAD,CAAA,gBAKF+C,EAAA,SAAAC,GAAA,IAAGzC,EAAHyC,EAAGzC,OAAH,OACbP,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAACwC,EAAA,EAAD,CACES,cAAe3C,EAAqBC,GACpC2C,SAAU,SAACZ,EAADa,GAA+B,IAApBC,EAAoBD,EAApBC,cAEnBC,QAAQC,IAAIxB,KAAKC,UAAUO,IAC3BiB,MACEC,uIAEA,CACEC,OAAQ,OACRC,KAAM5B,KAAKC,UAAUO,GACrBqB,QAAS,CACPC,eAAgB,sBAInBC,KAAK,SAAAC,GAAC,OAAIT,QAAQC,IAAI,kBAAmBQ,KACzCC,MAAM,SAAAD,GAAC,OAAIT,QAAQC,IAAI,qBAC1BF,GAAc,IAEhBY,iBAAkBjD,EAAqBR,IAEtC,SAAAkB,GAAK,OACJzB,OAAAC,EAAA,EAAAD,CAAA,QAAMkD,SAAUzB,EAAMwC,cACpBjE,OAAAC,EAAA,EAAAD,CAAA,uBACAA,OAAAC,EAAA,EAAAD,CAAA,WACAA,OAAAC,EAAA,EAAAD,CAACwC,EAAA,EAAD,CAAO3C,KAAK,eAAe+C,YAAY,iBACvC5C,OAAAC,EAAA,EAAAD,CAACkE,EAAD,CACE3D,OAAQA,EAAO4D,OAAO,SAAAzD,GAAK,MAAI,YAAYG,KAAKH,KAChD2B,cAAeZ,EAAMY,cACrBC,OAAQb,EAAMa,SAEhBtC,OAAAC,EAAA,EAAAD,CAACwC,EAAA,EAAD,CACEC,UAAWC,EACX7C,KAAK,oBACL8C,QAAS,CAAC,QAAS,eAErB3C,OAAAC,EAAA,EAAAD,CAAA,WACAA,OAAAC,EAAA,EAAAD,CAAA,2BACAA,OAAAC,EAAA,EAAAD,CAAA,WACAA,OAAAC,EAAA,EAAAD,CAACkE,EAAD,CACE3D,OAAQA,EAAO4D,OAAO,SAAAzD,GAAK,MAAI,SAASG,KAAKH,KAC7C2B,cAAeZ,EAAMY,cACrBC,OAAQb,EAAMa,SAEhBtC,OAAAC,EAAA,EAAAD,CAACwC,EAAA,EAAD,CACEC,UAAWC,EACX7C,KAAK,kBACL8C,QAAS,CAAC,UAAW,UAAW,aAElC3C,OAAAC,EAAA,EAAAD,CAAA,WACAA,OAAAC,EAAA,EAAAD,CAAA,sBACAA,OAAAC,EAAA,EAAAD,CAAA,WACAA,OAAAC,EAAA,EAAAD,CAACwC,EAAA,EAAD,CACEC,UAAWC,EACX7C,KAAK,cACL8C,QAAS,CAAC,MAAO,QAEnB3C,OAAAC,EAAA,EAAAD,CAACwC,EAAA,EAAD,CACEC,UAAWC,EACX7C,KAAK,kBACL8C,QAAS,CAAC,MAAO,QAEnB3C,OAAAC,EAAA,EAAAD,CAACwC,EAAA,EAAD,CACEC,UAAWC,EACX7C,KAAK,iBACL8C,QAAS,CACP,mBACA,sCACA,yCAGJ3C,OAAAC,EAAA,EAAAD,CAACwC,EAAA,EAAD,CAAOC,UAAU,WAAW5C,KAAK,WAAW+C,YAAY,aACxD5C,OAAAC,EAAA,EAAAD,CAAA,WACAA,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAQC,KAAK,SAASiE,SAAU3C,EAAM4C,cAAtC,UAGArE,OAAAC,EAAA,EAAAD,CAACsE,EAAuB7C,QChIrBlB,EAAS,CACpB,eACA,oBACA,yBACA,mCACA,4BACA,gCACA,yBACA,kBACA,cACA,kBACA,iBACA,YCxBagE,EAAA,0BACbvE,OAAAC,EAAA,EAAAD,CAACwE,EAAA,EAAD,KACExE,OAAAC,EAAA,EAAAD,CAAA,2BACAA,OAAAC,EAAA,EAAAD,CAAC+C,EAAD,CAAMxC,OAAQA,ynBCIlB,IAAMkE,EAAqBC,IAAMC,cAAc,IAEzCC,EAAc,SAAAnD,GAAK,OACvBzB,OAAA6E,EAAA,EAAA7E,CAACyE,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEtD,EAAMuD,MACLD,EAAgBtD,EAAMwD,QAAUF,EAAgBtD,EAAMwD,OAAOD,MAEtDvD,EAAMyD,QAAUzD,EAAM0D,UAC5B1D,EAAMuD,KAAOvD,EAAMuD,KAAKA,KAAOD,EAAgBtD,EAAMwD,OAAOD,MAGvDhF,OAAA6E,EAAA,EAAA7E,CAAA,uCAaf,SAASoF,IACP,MAAM,IAAIC,MACR,gVATJT,EAAYU,UAAY,CACtBN,KAAMO,IAAUC,OAChBP,MAAOM,IAAUE,OAAOC,WACxBR,OAAQK,IAAUI,KAClBR,SAAUI,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,8LCMzCK,EAAmB,SAAArG,GAAkB,IAAfsG,EAAetG,EAAfsG,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAO5B,IAAM6B,cAAcC,IAApBxG,OAAAc,OAAA,CACLoF,WACAC,iBACGA,EAAcM,QAIrBR,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUvE,MAAM,CACxBsF,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,+HCjBTS,EAAa,IAAIC,IAAWC,KAGrBC,EAASH,EAAWG,eC6BlBC,EA7BA,SAAAlH,GAAA,IAAGmH,EAAHnH,EAAGmH,UAAH,OACb/G,OAAAC,EAAA,EAAAD,CAAA,OACE0B,IAAKA,YAAF,mFAGUmF,EAAO,GAHjB,gBAIcA,EAAO,KAJrB,MAOH7G,OAAAC,EAAA,EAAAD,CAAA,MACE0B,IAAKA,YAAF,uDAGemF,EAAO,GAHtB,MAMH7G,OAAAC,EAAA,EAAAD,CAACgH,EAAA,KAAD,CACEC,GAAG,IACHvF,IAAG1B,OAAAkH,EAAA,EAAAlH,CAAE,CACHmH,MAAK,QACLC,eAAc,QAFb,KAKFL,MCMMM,IA9BA,SAAAzH,GAAA,IAAGuF,EAAHvF,EAAGuF,SAAH,OACbnF,OAAAC,EAAA,EAAAD,CAACgH,EAAA,YAAD,CACE/B,MAAK,YASLC,OAAQ,SAAAF,GAAI,OACVhF,OAAAC,EAAA,EAAAD,CAAAiC,EAAAC,EAAAC,SAAA,KACEnC,OAAAC,EAAA,EAAAD,CAACsH,EAAD,CAAQP,UAAW/B,EAAKuC,KAAKC,aAAaC,QAC1CzH,OAAAC,EAAA,EAAAD,CAAA,OACE0B,IAAKA,YAAF,yBAEUmF,EAAO,GAFjB,gBAGcA,EAAO,KAHrB,MAMF1B,KApBTH,KAAA0C,oDCLIC,EAAS3H,OAAA4H,EAAA,EAAA5H,CAAA,UAAH6H,OAAA,YAAG7H,CAAH,CAAAH,KAAA,UAAAiI,OAAA,2IAUGH","file":"component---src-pages-scouting-form-tsx-297dff9dea58f05ea0dd.js","sourcesContent":["import React from \"react\"\nimport Button from \"../button\"\ninterface CounterProps {\n  onChange: (v: any) => void\n  name: string\n  value: string\n}\nexport default ({ name, value, onChange }: CounterProps) => (\n  <div>\n    <label>{name}</label>\n    <Button\n      type=\"button\"\n      onClick={() =>\n        parseInt(value) >= 0 ? onChange(parseInt(value) + 1) : \"\"\n      }\n    >\n      +\n    </Button>\n    <label>{value}</label>\n    <Button\n      type=\"button\"\n      onClick={() => (parseInt(value) ? onChange(parseInt(value) - 1) : \"\")}\n    >\n      -\n    </Button>\n  </div>\n)\n","import * as Yup from \"yup\"\nexport const initiallizeFormState = (\n  fields: string[]\n): { [s: string]: string } =>\n  fields.reduce((state, field) => {\n    if (/^Number/.test(field)) {\n      return {\n        ...state,\n        [field]: \"0\",\n      }\n    } else {\n      return {\n        ...state,\n        [field]: \"\",\n      }\n    }\n  }, {})\n\nexport const createValidateObject = (fields: string[]) => {\n  const shape = fields.reduce(\n    (vobj, field) =>\n      /^Number/.test(field)\n        ? {\n            ...vobj,\n            [field]: Yup.number().min(0, \"Number can't be negative\"),\n            \"Robot Deadtime\": Yup.string().required(\n              \"Please select one of the options\"\n            ),\n            \"Scouter Name\": Yup.string().required(\"Please Enter Your Name\"),\n            comments: Yup.string(),\n          }\n        : {\n            ...vobj,\n            [field]: Yup.string(),\n            \"Robot Deadtime\": Yup.string().required(\n              \"Please select one of the options\"\n            ),\n            \"Scouter Name\": Yup.string().required(\"Please Enter Your Name\"),\n            comments: Yup.string(),\n          },\n    {}\n  )\n  return Yup.object().shape(shape)\n}\n","import React from \"react\"\nimport Counter from \"./counter\"\nimport { Formik, Field, FieldProps } from \"formik\"\nimport Button from \"../button\"\nimport { initiallizeFormState, createValidateObject } from \"./form-util\"\nexport const DisplayFormikState = (props: Object) => (\n  <div css={{ margin: \"1rem 0\" }}>\n    <h3 css={{ fontFamily: \"monospace\" }} />\n    <pre\n      css={{\n        background: \"#f6f8fa\",\n        fontSize: \".65rem\",\n        padding: \".5rem\",\n      }}\n    >\n      <strong>props</strong> = {JSON.stringify(props, null, 2)}\n    </pre>\n  </div>\n)\nexport const DisplayFields = (props: {\n  fields: string[]\n  setFieldValue: (field: string, value: any) => void\n  values: any\n}) => (\n  <>\n    {props.fields.map(field => {\n      if (/^Number/.test(field)) {\n        return (\n          <Counter\n            name={field}\n            onChange={value => props.setFieldValue(field, value)}\n            value={props.values[field]}\n            key={field}\n          />\n        )\n      } else if (/Cross/.test(field) || /Climb/.test(field)) {\n        return (\n          <Field\n            component={DisplayRadio}\n            name={field}\n            options={[\"yes\", \"no\"]}\n            key={field}\n          />\n        )\n      } else {\n        return <Field key={field} name={field} placeholder={field} />\n      }\n    })}\n  </>\n)\nexport const DisplayRadio = (props: FieldProps & { options: string[] }) => (\n  <div>\n    <h3>{props.field.name}</h3>\n    {props.options.map((option, index) => (\n      <React.Fragment key={option}>\n        <input\n          onChange={props.field.onChange}\n          name={props.field.name}\n          value={option}\n          type=\"radio\"\n        />\n        {option} <br />\n      </React.Fragment>\n    ))}\n  </div>\n)\nexport default ({ fields }: { fields: string[] }) => (\n  <div>\n    <Formik\n      initialValues={initiallizeFormState(fields)}\n      onSubmit={(values, { setSubmitting }) => {\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\"\n        console.log(JSON.stringify(values))\n        fetch(\n          proxyurl +\n            \"https://script.google.com/macros/s/AKfycbw6coSc3fptX7wLepvJ6idwzkEx9uZwxsKMhcfFuWCit-9WZJIO/exec\",\n          {\n            method: \"POST\",\n            body: JSON.stringify(values),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n          .then(r => console.log(\"Request Success\", r))\n          .catch(r => console.log(\"request failure\"))\n        setSubmitting(false)\n      }}\n      validationSchema={createValidateObject(fields)}\n    >\n      {props => (\n        <form onSubmit={props.handleSubmit}>\n          <h2>Sandstorm</h2>\n          <hr />\n          <Field name=\"Scouter Name\" placeholder=\"Scouter Name\" />\n          <DisplayFields\n            fields={fields.filter(field => /Sandstorm/.test(field))}\n            setFieldValue={props.setFieldValue}\n            values={props.values}\n          />\n          <Field\n            component={DisplayRadio}\n            name=\"Starting Platform\"\n            options={[\"Level\", \"Non-level\"]}\n          />\n          <br />\n          <h2>Tele-Operated</h2>\n          <hr />\n          <DisplayFields\n            fields={fields.filter(field => /Teleop/.test(field))}\n            setFieldValue={props.setFieldValue}\n            values={props.values}\n          />\n          <Field\n            component={DisplayRadio}\n            name=\"Sandstorm Climb\"\n            options={[\"Level 1\", \"Level 2\", \"Level 3\"]}\n          />\n          <br />\n          <h2>End Game</h2>\n          <hr />\n          <Field\n            component={DisplayRadio}\n            name=\"Hab Docking\"\n            options={[\"yes\", \"no\"]}\n          />\n          <Field\n            component={DisplayRadio}\n            name=\"Complete Rocket\"\n            options={[\"yes\", \"no\"]}\n          />\n          <Field\n            component={DisplayRadio}\n            name=\"Robot Deadtime\"\n            options={[\n              \"Robot Never Dead\",\n              \"Robot Dead for Less than 30 Seconds\",\n              \"Robot Dead for more than 30 seconds\",\n            ]}\n          />\n          <Field component=\"textarea\" name=\"Comments\" placeholder=\"comments\" />\n          <br />\n          <Button type=\"submit\" disabled={props.isSubmitting}>\n            Submit\n          </Button>\n          <DisplayFormikState {...props} />\n        </form>\n      )}\n    </Formik>\n  </div>\n)\n","export const gameValues = {\n  \"Hatch Panel\": 2,\n  Cargo: 3,\n  \"Sandstorm Cross\": {\n    Level: 6,\n    \"Non Level\": 3,\n  },\n  \"Sandstorm Climb\": {\n    \"Level 1\": 3,\n    \"Level 2\": 6,\n    \"Level 3\": 12,\n  },\n  Defending: 5,\n  \"Hab Docking\": \"1 RP\",\n  \"Complete Rocket\": \"1 RP\",\n}\n\nexport const fields = [\n  \"Scouter Name\",\n  \"Starting Platform\",\n  \"Cross During Sandstorm\",\n  \"Number of Sandstorm Hatch Panels\",\n  \"Number of Sandstorm Cargo\",\n  \"Number of Teleop Hatch Panels\",\n  \"Number of Teleop Cargo\",\n  \"Sandstorm Climb\",\n  \"Hab Docking\",\n  \"Complete Rocket\",\n  \"Robot Deadtime\",\n  \"Comments\",\n]\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport Layout from \"../components/layout\"\nimport Form from \"../components/form-components/form-template\"\nimport { fields } from \"../utils/game-values\"\nexport default () => (\n  <Layout>\n    <h1>Scouting Form</h1>\n    <Form fields={fields} />\n  </Layout>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import Typography from \"typography\"\n//@ts-ignore\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import { Link } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\nimport React from \"react\"\ninterface HeaderProps {\n  siteTitle: string\n}\nconst Header = ({ siteTitle }: HeaderProps) => (\n  <div\n    css={css`\n      background: linear-gradient(90deg, #d26ac2, #46c9e5);\n      margin-bottom: 1.45rem;\n      padding: ${rhythm(1)};\n      padding-top: ${rhythm(1.5)};\n    `}\n  >\n    <h1\n      css={css`\n        display: inline-block;\n        font-style: normal;\n        padding-left: ${rhythm(1)};\n      `}\n    >\n      <Link\n        to=\"/\"\n        css={{\n          color: `black`,\n          textDecoration: `none`,\n        }}\n      >\n        {siteTitle}\n      </Link>\n    </h1>\n  </div>\n)\n\nexport default Header\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\nimport AppBar from \"./app-bar\"\n\nconst Layout = ({ children }: LayoutProps) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <AppBar siteTitle={data.site.siteMetadata.title} />\n        <div\n          css={css`\n            margin: 0 auto;\n            padding: ${rhythm(2)};\n            padding-top: ${rhythm(1.5)};\n          `}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\ninterface LayoutProps {\n  children: React.ReactNode\n}\nexport default Layout\n","import styled from \"@emotion/styled\"\n\nconst Button = styled.button`\n  display: inline-block;\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`\n\nexport default Button\n"],"sourceRoot":""}