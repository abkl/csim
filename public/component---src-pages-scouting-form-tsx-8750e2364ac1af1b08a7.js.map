{"version":3,"sources":["webpack:///./src/components/form-components/form-util.ts","webpack:///./src/components/form-components/counter.tsx","webpack:///./src/components/form-components/fields.tsx","webpack:///./src/components/form-components/form-template.tsx","webpack:///./src/utils/game-constants.ts","webpack:///./src/pages/scouting-form.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/typography.ts","webpack:///./src/components/app-bar.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/components/button.tsx"],"names":["initiallizeFormState","fields","Object","keys","map","f","reduce","acc","val","concat","state","field","_Object$assign","_Object$assign2","_Object$assign3","_Object$assign4","assign","counter","_ref","name","value","onChange","core_browser_esm","Button_default","a","type","onClick","parseInt","DisplayFields","_ref2","setFieldValue","values","react_default","Fragment","filter","formik_esm","placeholder","v","key","component","DisplayRadio","options","props","css","fields_ref","option","DisplayFormikState","form_template_ref","form_template_ref2","_ref3","JSON","stringify","form_template","_ref4","initialValues","onSubmit","_ref5","setSubmitting","fetch","proxyurl","method","body","headers","Content-Type","then","r","console","log","catch","handleSubmit","_templateObject","gamePhase","fields_DisplayFields","components_button","disabled","isSubmitting","form_template_DisplayFormikState","Pre-game","field-name","Sandstorm","Teleop","End game","__webpack_exports__","layout","StaticQueryContext","React","createContext","StaticQuery","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","data","query","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","json","shape","typography","Typography","kirkhamTheme","rhythm","Header","siteTitle","gatsby_browser_entry","to","css_browser_esm","color","textDecoration","Layout","app_bar","site","siteMetadata","title","_755544856","Button","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","styles"],"mappings":"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","file":"component---src-pages-scouting-form-tsx-8750e2364ac1af1b08a7.js","sourcesContent":["import * as Yup from \"yup\"\nimport { Fields, FieldType } from \"../../utils/game-constants\"\nexport const initiallizeFormState = (fields: Fields): { [s: string]: any } =>\n  Object.keys(fields)\n    .map(f => fields[f]) //map out the fields into [[fields]]\n    .reduce((acc, val) => acc.concat(val), []) //flattens the array\n    .reduce((state, field) => {\n      if (typeof field === \"object\") {\n        switch (field[\"type\"]) {\n          case \"Number\":\n            return {\n              ...state,\n              [field[\"field-name\"]]: 0,\n            }\n          case \"Radio\":\n            return {\n              ...state,\n              [field[\"field-name\"]]: field![\"options\"]![0],\n            }\n          case \"Switch\":\n            return {\n              ...state,\n              [field[\"field-name\"]]: false,\n            }\n          default:\n            return {\n              ...state,\n            }\n        }\n      }\n      return {\n        ...state,\n        [field as string]: \"\",\n      }\n    }, {}) // initializes the form state\n\nexport const createValidateObject = (fields: Fields) => {\n  const shape = Object.keys(fields)\n    .map(f => fields[f])\n    .reduce((acc, val) => acc.concat(val), [])\n    .reduce((vobj, field) => {\n      if (typeof field === \"object\") {\n        switch (field.type) {\n          case \"Number\":\n            return {\n              ...vobj,\n              [field[\"field-name\"]]: Yup.number().min(0),\n            }\n          case \"Radio\":\n            return {\n              ...vobj,\n              [field[\"field-name\"]]: Yup.string().required(),\n            }\n          case \"Switch\":\n            return {\n              ...vobj,\n              [field[\"field-name\"]]: Yup.boolean().required(),\n            }\n        }\n      }\n      return {\n        ...vobj,\n        [field as string]: \"\",\n      }\n    }, {})\n  return Yup.object().shape(shape)\n}\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\ninterface CounterProps {\n  onChange: (v: any) => void\n  name: string\n  value: string\n}\nexport default ({ name, value, onChange }: CounterProps) => (\n  <div>\n    <label>{name}</label>\n    <Button\n      type=\"button\"\n      onClick={() =>\n        parseInt(value) >= 0 ? onChange(parseInt(value) + 1) : \"\"\n      }\n    >\n      +\n    </Button>\n    <label>{value}</label>\n    <Button\n      type=\"button\"\n      onClick={() => (parseInt(value) ? onChange(parseInt(value) - 1) : \"\")}\n    >\n      -\n    </Button>\n  </div>\n)\n","import React from \"react\"\nimport Counter from \"./counter\"\nimport { Field, FieldProps } from \"formik\"\nimport { FieldType } from \"../../utils/game-constants\"\nimport css from \"@emotion/css\"\n\ninterface DisplayFieldsProps {\n  fields: FieldType[]\n  setFieldValue: (field: string, value: any) => void\n  values: any\n}\nexport const DisplayFields = ({\n  fields,\n  setFieldValue,\n  values,\n}: DisplayFieldsProps) => (\n  <>\n    {fields\n      .filter(f => typeof f === \"string\")\n      .map(f => (\n        <Field name={f} placeholder={f} />\n      ))}\n    {fields\n      .filter(f => typeof f === \"object\" && f.type === \"Number\")\n      .map(f =>\n        typeof f === \"object\" ? (\n          <Counter\n            value={values[f[\"field-name\"]]}\n            onChange={v => setFieldValue(f[\"field-name\"] as string, v)}\n            name={f[\"field-name\"]}\n            key={f[\"field-name\"]}\n          />\n        ) : (\n          \"\"\n        )\n      )}\n    {fields\n      .filter(f => typeof f === \"object\" && f.type === \"Radio\")\n      .map(f =>\n        typeof f === \"object\" ? (\n          <Field\n            component={DisplayRadio}\n            name={f[\"field-name\"]}\n            options={f![\"options\"]}\n            key={f[\"field-name\"]}\n          />\n        ) : (\n          \"\"\n        )\n      )}\n  </>\n)\nexport const DisplayRadio = (props: FieldProps & { options: string[] }) => (\n  <div\n    css={css`\n      flex-direction: column;\n      justify-content: center;\n    `}\n  >\n    <label>{props.field.name}</label>\n    <br />\n    {props.options.map(option => (\n      <React.Fragment key={option}>\n        <input\n          onChange={props.field.onChange}\n          name={props.field.name}\n          value={option}\n          type=\"radio\"\n        />\n        {option} <br />\n      </React.Fragment>\n    ))}\n  </div>\n)\n","import React from \"react\"\nimport Counter from \"./counter\"\nimport { Formik, Field, FieldProps } from \"formik\"\nimport Button from \"../button\"\nimport { initiallizeFormState, createValidateObject } from \"./form-util\"\nimport { css } from \"@emotion/core/\"\nimport { DisplayFields, DisplayRadio } from \"./fields\"\nimport { Fields } from \"../../utils/game-constants\"\nexport const DisplayFormikState = (props: Object) => (\n  <div css={{ margin: \"1rem 0\" }}>\n    <h3 css={{ fontFamily: \"monospace\" }} />\n    <pre\n      css={{\n        background: \"#f6f8fa\",\n        fontSize: \".65rem\",\n        padding: \".5rem\",\n      }}\n    >\n      {JSON.stringify(props, null, 2)}\n    </pre>\n  </div>\n)\n\nexport default ({ fields }: { fields: Fields }) => (\n  <div>\n    <Formik\n      initialValues={initiallizeFormState(fields)}\n      onSubmit={(values, { setSubmitting }) => {\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\"\n        fetch(\n          proxyurl +\n            \"https://script.google.com/macros/s/AKfycbw6coSc3fptX7wLepvJ6idwzkEx9uZwxsKMhcfFuWCit-9WZJIO/exec\",\n          {\n            method: \"POST\",\n            body: JSON.stringify(values),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n          .then(r => console.log(\"Request Success\", r))\n          .catch(r => console.log(\"request failure\"))\n        setSubmitting(false)\n      }}\n    >\n      {props => (\n        <form\n          onSubmit={props.handleSubmit}\n          css={css`\n            justify-content: center;\n            text-align: center;\n            flex-direction: center;\n          `}\n        >\n          {Object.keys(fields).map(gamePhase => (\n            <>\n              <h2>{gamePhase}</h2>\n              <DisplayFields\n                fields={fields[gamePhase]}\n                setFieldValue={props.setFieldValue}\n                values={props.values}\n              />\n            </>\n          ))}\n          <Button type=\"submit\" disabled={props.isSubmitting}>\n            Submit\n          </Button>\n          <DisplayFormikState {...props} />\n        </form>\n      )}\n    </Formik>\n  </div>\n)\n","export const gameValues = {\n  \"Hatch Panel\": 2,\n  Cargo: 3,\n  \"Sandstorm Cross\": {\n    Level: 6,\n    \"Non Level\": 3,\n  },\n  \"Sandstorm Climb\": {\n    \"Level 1\": 3,\n    \"Level 2\": 6,\n    \"Level 3\": 12,\n  },\n  Defending: 5,\n  \"Hab Docking\": \"1 RP\",\n  \"Complete Rocket\": \"1 RP\",\n}\nexport type FieldType =\n  | string\n  | {\n      \"field-name\": string\n      type: \"Radio\" | \"Switch\" | \"Number\"\n      options?: string[]\n    }\nexport interface Fields {\n  \"Pre-game\": FieldType[]\n  Sandstorm: FieldType[]\n  Teleop: FieldType[]\n  \"End game\": FieldType[]\n  [s: string]: FieldType[]\n}\nexport const fields: Fields = {\n  \"Pre-game\": [\n    \"Scouter Name\",\n    {\n      \"field-name\": \"Event Code\",\n      type: \"Radio\",\n      options: [\"sfr\", \"???\"],\n    },\n    \"Match Number\",\n    {\n      \"field-name\": \"Robot Starting Platform\",\n      type: \"Radio\",\n      options: [\"level\", \"non-level\"],\n    },\n  ],\n  Sandstorm: [\n    { \"field-name\": \"Cross during Sandstorm\", type: \"Switch\" },\n    { \"field-name\": \"Number of Hatch Panels(Sandstorm)\", type: \"Number\" },\n    { \"field-name\": \"Number of Cargo(Sandstorm)\", type: \"Number\" },\n    {\n      \"field-name\": \"Number of Hatch Panels dropped(Sandstorm)\",\n      type: \"Number\",\n    },\n    { \"field-name\": \"Number of Cargo dropped(Sandstorm)\", type: \"Number\" },\n  ],\n  Teleop: [\n    { \"field-name\": \"Number of Hatch Panels(Teleop)\", type: \"Number\" },\n    { \"field-name\": \"Number of Cargo(Teleop)\", type: \"Number\" },\n    { \"field-name\": \"Number of Hatch Panels dropped(Teleop)\", type: \"Number\" },\n    { \"field-name\": \"Number of Cargo dropped(Teleop)\", type: \"Number\" },\n  ],\n  \"End game\": [\n    \"Habitat Return\",\n    \"Rocket Completion\",\n    \"Robot Deadtime\",\n    \"Comments\",\n  ],\n}\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport Layout from \"../components/layout\"\nimport Form from \"../components/form-components/form-template\"\nimport { fields } from \"../utils/game-constants\"\nexport default () => (\n  <Layout>\n    <h1>Scouting Form</h1>\n    <Form fields={fields} />\n  </Layout>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import Typography from \"typography\"\n//@ts-ignore\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import { Link } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\nimport React from \"react\"\ninterface HeaderProps {\n  siteTitle: string\n}\nconst Header = ({ siteTitle }: HeaderProps) => (\n  <div\n    css={css`\n      background: linear-gradient(90deg, #d26ac2, #46c9e5);\n      margin-bottom: 1.45rem;\n      padding: ${rhythm(1)};\n      padding-top: ${rhythm(1.5)};\n    `}\n  >\n    <h1\n      css={css`\n        display: inline-block;\n        font-style: normal;\n        padding-left: ${rhythm(1)};\n      `}\n    >\n      <Link\n        to=\"/\"\n        css={{\n          color: `black`,\n          textDecoration: `none`,\n        }}\n      >\n        {siteTitle}\n      </Link>\n    </h1>\n  </div>\n)\n\nexport default Header\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\nimport AppBar from \"./app-bar\"\n\nconst Layout = ({ children }: LayoutProps) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <AppBar siteTitle={data.site.siteMetadata.title} />\n        <div\n          css={css`\n            margin: 0 auto;\n            padding: ${rhythm(2)};\n            padding-top: ${rhythm(1.5)};\n          `}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\ninterface LayoutProps {\n  children: React.ReactNode\n}\nexport default Layout\n","import styled from \"@emotion/styled\"\n\nconst Button = styled.button`\n  display: inline-block;\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`\n\nexport default Button\n"],"sourceRoot":""}