{"version":3,"sources":["webpack:///./src/components/form-components/form-util.ts","webpack:///./src/components/form-components/counter.tsx","webpack:///./src/components/form-components/radio.tsx","webpack:///./src/components/form-components/display-fields.tsx","webpack:///./src/components/primatives/modal.tsx","webpack:///./src/components/form-components/display-values.tsx","webpack:///./src/components/form-components/form-template.tsx","webpack:///./src/utils/game-constants.ts","webpack:///./src/pages/scouting-form.tsx","webpack:///./src/components/primatives/button.tsx"],"names":["initiallizeFormState","fields","Object","keys","map","f","reduce","acc","val","concat","state","field","_Object$assign","_Object$assign2","_Object$assign3","_Object$assign4","assign","counter","_ref2","name","value","onChange","core_browser_esm","css","_ref3","counter_ref","primatives_button","type","onClick","parseInt","_ref4","Radio","props","_ref5","radio_ref4","radio_ref3","options","option","radio_ref2","key","radio_ref","checked","display_fields","setFieldValue","values","react_default","a","Fragment","filter","display_fields_ref","formik_esm","component","placeholder","v","ModalOverlay","styled_base_browser_esm","target","styles","Modal","modal","_ref","onClose","children","ref","useRef","handler","useEffect","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","useLayoutEffect","body","style","overflow","DisplayValues","es","data","property","showPagination","display_values_ref2","columns","Header","accessor","minWidth","form_template","_useState","useState","modalState","setModalState","initialValues","onSubmit","actions","axios","post","proxyurl","JSON","stringify","then","r","console","log","catch","setSubmitting","resetForm","handleSubmit","_templateObject","gamePhase","_templateObject2","_templateObject3","rhythm","display_values","isSubmitting","disabled","Pre-game","field-name","Sandstorm","Teleop","End game","__webpack_exports__","scouting_form_ref","Button","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","theme","primary","red"],"mappings":"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","file":"component---src-pages-scouting-form-tsx-96934f33a1241a65f9bd.js","sourcesContent":["import * as Yup from \"yup\"\nimport { Fields } from \"../../utils/game-constants\"\nexport const initiallizeFormState = (fields: Fields): { [s: string]: any } =>\n  Object.keys(fields)\n    .map(f => fields[f]) // map out the fields into [[fields]]\n    .reduce((acc, val) => acc.concat(val), []) // flattens the array\n    .reduce((state, field) => {\n      if (typeof field === \"object\") {\n        switch (field[\"type\"]) {\n          case \"Number\":\n            return {\n              ...state,\n              [field[\"field-name\"]]: 0,\n            }\n          case \"Radio\":\n            return {\n              ...state,\n              [field[\"field-name\"]]: field[\"options\"]\n                ? field[\"options\"][0]\n                : \"none-selected\",\n            }\n          case \"Switch\":\n            return {\n              ...state,\n              [field[\"field-name\"]]: false,\n            }\n          default:\n            return {\n              ...state,\n            }\n        }\n      }\n      return {\n        ...state,\n        [field as string]: \"\",\n      }\n    }, {}) // initializes the form state\n\nexport const createValidateObject = (fields: Fields) => {\n  const shape = Object.keys(fields)\n    .map(f => fields[f])\n    .reduce((acc, val) => acc.concat(val), [])\n    .reduce((vobj, field) => {\n      if (typeof field === \"object\") {\n        switch (field.type) {\n          case \"Number\":\n            return {\n              ...vobj,\n              [field[\"field-name\"]]: Yup.number().min(0),\n            }\n          case \"Radio\":\n            return {\n              ...vobj,\n              [field[\"field-name\"]]: Yup.string().required(),\n            }\n          case \"Switch\":\n            return {\n              ...vobj,\n              [field[\"field-name\"]]: Yup.boolean().required(),\n            }\n        }\n      }\n      return {\n        ...vobj,\n        [field as string]: \"\",\n      }\n    }, {})\n  return Yup.object().shape(shape)\n}\n","import React from \"react\"\nimport Button from \"../primatives/button\"\nimport css from \"@emotion/css\"\ninterface CounterProps {\n  onChange: (v: any) => void\n  name: string\n  value: string\n}\nexport default ({ name, value, onChange }: CounterProps) => (\n  <div\n    css={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      borderWidth: \"5px\",\n      paddingBottom: \"5%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <label>{name}</label>\n    <br />\n    <div\n      css={css`\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n        width: 50%;\n        max-width: 160px;\n      `}\n    >\n      <Button\n        type=\"button\"\n        onClick={() => (parseInt(value) ? onChange(parseInt(value) - 1) : \"\")}\n      >\n        -\n      </Button>\n\n      <label css={{ textAlign: \"center\", alignSelf: \"center\" }}>{value}</label>\n      <Button\n        type=\"button\"\n        onClick={() =>\n          parseInt(value) >= 0 ? onChange(parseInt(value) + 1) : \"\"\n        }\n      >\n        +\n      </Button>\n    </div>\n  </div>\n)\n","import React from \"react\"\nimport css from \"@emotion/css\"\nimport { FieldProps } from \"formik\"\nconst Radio = (props: FieldProps & { options: string[] }) => (\n  <fieldset\n    css={css`\n      display: inline-flex;\n      position: relative;\n      flex-direction: column;\n      align-items: flex-start;\n      width: 100%;\n      border: 0;\n      max-width: 300px;\n      align-self: center;\n    `}\n  >\n    <legend\n      css={css`\n        text-align: left;\n      `}\n    >\n      {props.field.name}\n    </legend>\n    <div\n      css={css`\n        display: flex;\n        margin: 8px 0;\n        flex-direction: column;\n      `}\n    >\n      {props.options.map(option => (\n        <label\n          css={css`\n            display: inline-flex;\n            vertical-align: middle;\n            align-items: center;\n          `}\n          key={option}\n        >\n          <span\n            css={css`\n              padding: 12px;\n            `}\n          >\n            <input\n              onChange={props.field.onChange}\n              name={props.field.name}\n              value={option}\n              type=\"radio\"\n              checked={props.field.value === option}\n            />\n          </span>\n          {option} <br />\n        </label>\n      ))}\n    </div>\n  </fieldset>\n)\nexport default Radio\n","import React from \"react\"\nimport Counter from \"./counter\"\nimport { Field } from \"formik\"\nimport { FieldType } from \"../../utils/game-constants\"\nimport Radio from \"./radio\"\nimport css from \"@emotion/css\"\n\ninterface DisplayFieldsProps {\n  fields: FieldType[]\n  setFieldValue: (field: string, value: any) => void\n  values: any\n}\nexport default ({ fields, setFieldValue, values }: DisplayFieldsProps) => (\n  <>\n    {fields\n      .filter(f => typeof f === \"string\")\n      .map(f => (\n        <div\n          css={css`\n            padding-bottom: 15px;\n          `}\n          key={f as string}\n        >\n          <Field\n            component={f === \"Comments\" ? \"textarea\" : \"input\"}\n            name={f}\n            placeholder={f}\n          />\n          <br />\n        </div>\n      ))}\n    {fields\n      .filter(f => typeof f === \"object\" && f.type === \"Number\")\n      .map(f =>\n        typeof f === \"object\" ? (\n          <Counter\n            value={values[f[\"field-name\"]]}\n            onChange={v => setFieldValue(f[\"field-name\"] as string, v)}\n            name={f[\"field-name\"]}\n            key={f[\"field-name\"]}\n          />\n        ) : (\n          \"\"\n        )\n      )}\n    {fields\n      .filter(f => typeof f === \"object\" && f.type === \"Radio\")\n      .map(f =>\n        typeof f === \"object\" ? (\n          <Field\n            component={Radio}\n            name={f[\"field-name\"]}\n            options={f[\"options\"] as string[]}\n            key={f[\"field-name\"]}\n          />\n        ) : (\n          \"\"\n        )\n      )}\n  </>\n)\n","import React, { useEffect, useRef, useLayoutEffect } from \"react\"\nimport styled from \"@emotion/styled\"\n\nconst ModalOverlay = styled.div`\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.65);\n  display: flex;\n  padding: 1em;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n`\nconst Modal = styled.div`\n  background-color: white;\n  border-radius: 3px;\n  padding: 1rem 2rem;\n  text-align: center;\n  overflow: visible;\n  max-height: 100vh;\n  overflow-y: auto;\n`\n\n// Hooks\nfunction useOnClickOutside(\n  ref: React.RefObject<HTMLDivElement>,\n  handler: (a: any) => void\n) {\n  useEffect(() => {\n    const listener = (event: Event) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target as Node)) {\n        return\n      }\n\n      handler(event)\n    }\n\n    document.addEventListener(\"mousedown\", listener)\n    document.addEventListener(\"touchstart\", listener)\n\n    return () => {\n      document.removeEventListener(\"mousedown\", listener)\n      document.removeEventListener(\"touchstart\", listener)\n    }\n  }, []) // Empty array ensures that effect is only run on mount and unmount\n}\nfunction useLockBodyScroll() {\n  useLayoutEffect(() => {\n    // Prevent scrolling on mount\n    document.body.style.overflow = \"hidden\"\n    // Re-enable scrolling when component unmounts\n    return () => (document.body.style.overflow = \"visible\")\n  }, []) // Empty array ensures effect is only run on mount and unmount\n}\nexport default ({\n  onClose,\n  children,\n}: {\n  onClose: () => void\n  children: React.ReactNode\n}) => {\n  const ref = useRef(null)\n  useOnClickOutside(ref, () => onClose())\n  useLockBodyScroll()\n  return (\n    <ModalOverlay>\n      <Modal ref={ref}>{children}</Modal>\n    </ModalOverlay>\n  )\n}\n","import React from \"react\"\nimport ReactTable from \"react-table\"\nconst DisplayValues = ({ values }: { values: { [s: string]: string } }) => (\n  <ReactTable\n    data={Object.keys(values).map(key => ({\n      property: key,\n      value: values[key],\n    }))}\n    showPagination={false}\n    css={{\n      width: \"100%\",\n      fontSize: \".65rem\",\n    }}\n    columns={[\n      {\n        Header: \"Field Names\",\n        accessor: \"property\",\n        minWidth: 200,\n        style: {\n          overflow: \"visible\",\n        },\n      },\n      {\n        Header: \"Values\",\n        accessor: \"value\",\n        minWidth: 200,\n      },\n    ]}\n  />\n)\nexport default DisplayValues\n","import React, { useState } from \"react\"\nimport { Formik } from \"formik\"\nimport Button from \"../primatives/button\"\nimport { initiallizeFormState } from \"./form-util\"\nimport { css } from \"@emotion/core/\"\nimport DisplayFields from \"./display-fields\"\nimport { Fields } from \"../../utils/game-constants\"\nimport { rhythm } from \"../../utils/typography\"\nimport Modal from \"../primatives/modal\"\nimport DisplayValues from \"./display-values\"\nimport axios from \"axios\"\nexport default ({ fields }: { fields: Fields }) => {\n  const [modalState, setModalState] = useState(false)\n  return (\n    <div>\n      <Formik\n        initialValues={initiallizeFormState(fields)}\n        onSubmit={(values, actions) => {\n          const proxyurl = \"https://cors-anywhere.herokuapp.com/\"\n          axios\n            .post(\n              proxyurl +\n                \"https://script.google.com/macros/s/AKfycbw6coSc3fptX7wLepvJ6idwzkEx9uZwxsKMhcfFuWCit-9WZJIO/exec\",\n              JSON.stringify(values)\n            )\n            .then(r => console.log(\"Request Success\", r))\n            .catch(() => console.log(\"request failure\"))\n            .then(() => {\n              actions.setSubmitting(false)\n              actions.resetForm()\n              setModalState(false)\n            })\n        }}\n      >\n        {props => (\n          <form\n            onSubmit={props.handleSubmit}\n            css={css`\n              display: flex;\n              flex-direction: column;\n              justify-content: center;\n              align-items: center;\n              text-align: center;\n            `}\n          >\n            {Object.keys(fields).map(gamePhase => (\n              <div\n                css={css`\n                  display: flex;\n                  flex-direction: column;\n                  justify-content: center;\n                  width: 100%;\n                `}\n                key={gamePhase}\n              >\n                <h2\n                  css={css`\n                    margin-top: ${rhythm(1)};\n                  `}\n                >\n                  {gamePhase}\n                </h2>\n                <DisplayFields\n                  fields={fields[gamePhase]}\n                  setFieldValue={props.setFieldValue}\n                  values={props.values}\n                />\n              </div>\n            ))}\n            <Button type=\"button\" onClick={() => setModalState(true)}>\n              Confirm\n            </Button>\n            {modalState && (\n              <Modal onClose={() => setModalState(false)}>\n                <h1> Confirm </h1>\n                <DisplayValues values={props.values} />\n                {props.isSubmitting ? (\n                  <p> loading... </p>\n                ) : (\n                  <Button disabled={props.isSubmitting} type=\"submit\">\n                    Submit\n                  </Button>\n                )}\n              </Modal>\n            )}\n          </form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n","export const gameValues = {\n  \"Hatch Panel\": 2,\n  Cargo: 3,\n  \"Sandstorm Cross\": {\n    Level: 6,\n    \"Non Level\": 3,\n  },\n  \"Sandstorm Climb\": {\n    \"Level 1\": 3,\n    \"Level 2\": 6,\n    \"Level 3\": 12,\n  },\n  Defending: 5,\n  \"Hab Docking\": \"1 RP\",\n  \"Complete Rocket\": \"1 RP\",\n}\nexport type FieldType =\n  | string\n  | {\n      \"field-name\": string\n      type: \"Switch\" | \"Number\"\n      [s: string]: string | string[]\n    }\n  | {\n      \"field-name\": string\n      type: \"Radio\"\n      options: string[]\n      [s: string]: string | string[]\n    }\nexport interface Fields {\n  \"Pre-game\": FieldType[]\n  Sandstorm: FieldType[]\n  Teleop: FieldType[]\n  \"End game\": FieldType[]\n  [s: string]: FieldType[]\n}\nexport const fields: Fields = {\n  \"Pre-game\": [\n    \"Your Name\",\n    \"Team Number\",\n    {\n      \"field-name\": \"Event Code\",\n      type: \"Radio\",\n      options: [\"sfr\", \"svr\"],\n    },\n    \"Match Number\",\n    {\n      \"field-name\": \"Robot Starting Platform\",\n      type: \"Radio\",\n      options: [\"level\", \"non-level\"],\n    },\n  ],\n  Sandstorm: [\n    { \"field-name\": \"Cross during Sandstorm\", type: \"Switch\" },\n    { \"field-name\": \"Number of Hatch Panels(Sandstorm)\", type: \"Number\" },\n    { \"field-name\": \"Number of Cargo(Sandstorm)\", type: \"Number\" },\n    {\n      \"field-name\": \"Number of Hatch Panels dropped(Sandstorm)\",\n      type: \"Number\",\n    },\n    { \"field-name\": \"Number of Cargo dropped(Sandstorm)\", type: \"Number\" },\n  ],\n  Teleop: [\n    { \"field-name\": \"Number of Hatch Panels(Teleop)\", type: \"Number\" },\n    { \"field-name\": \"Number of Cargo(Teleop)\", type: \"Number\" },\n    { \"field-name\": \"Number of Hatch Panels dropped(Teleop)\", type: \"Number\" },\n    { \"field-name\": \"Number of Cargo dropped(Teleop)\", type: \"Number\" },\n    { \"field-name\": \"Number of Fouls\", type: \"Number\" },\n  ],\n  \"End game\": [\n    { \"field-name\": \"Habitat Return\", type: \"Switch\" },\n    { \"field-name\": \"Rocket Completion\", type: \"Switch\" },\n    {\n      \"field-name\": \"Robot Deadtime\",\n      type: \"Radio\",\n      options: [\"Never Dead\", \"Less than 15 Seconds\", \"More than 15 seconds\"],\n    },\n    \"Total Score(At the end of the Game)\",\n    \"Comments\",\n  ],\n}\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport Form from \"../components/form-components/form-template\"\nimport { fields } from \"../utils/game-constants\"\nexport default () => (\n  <>\n    <h1\n      css={css`\n        text-align: center;\n      `}\n    >\n      Scouting Form\n    </h1>\n    <Form fields={fields} />\n  </>\n)\n","import styled from \"@emotion/styled\"\n\ninterface ButtonProps {\n  primary: boolean\n}\nconst Button = styled.button`\n  min-width: 2rem;\n  padding: 6px 16px;\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.1), 0 6px 20px 0 rgba(0, 0, 0, 0.09);\n  border: 2px solid ${props => props.theme.primary.red};\n  border-radius: 4px;\n  outline: none;\n  font-size: 14px;\n  text-decoration: none;\n  background: none;\n  color: #c41e3a;\n  &:active {\n    background-color: ${props => props.theme.primary.red};\n    color: white;\n  }\n`\n\nexport default Button\n"],"sourceRoot":""}