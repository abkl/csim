{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/typography.ts","webpack:///./src/components/app-bar.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/components/seo.tsx"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","description","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","typography","Typography","kirkhamTheme","rhythm","Header","siteTitle","core_browser_esm","css","gatsby_browser_entry","to","css_browser_esm","color","textDecoration","Layout","react_default","a","Fragment","app_bar","site","siteMetadata","_755544856","SEO","_ref$lang","lang","_ref$meta","meta","_ref$keywords","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-404-tsx-29aaa3e602130090b814.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" description=\"404 page\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import Typography from \"typography\"\n//@ts-ignore\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import { Link } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\nimport React from \"react\"\ninterface HeaderProps {\n  siteTitle: string\n}\nconst Header = ({ siteTitle }: HeaderProps) => (\n  <div\n    css={css`\n      background: linear-gradient(90deg, #d26ac2, #46c9e5);\n      margin-bottom: 1.45rem;\n      padding: ${rhythm(1)};\n      padding-top: ${rhythm(1.5)};\n    `}\n  >\n    <h1\n      css={css`\n        display: inline-block;\n        font-style: normal;\n        padding-left: ${rhythm(1)};\n      `}\n    >\n      <Link\n        to=\"/\"\n        css={{\n          color: `black`,\n          textDecoration: `none`,\n        }}\n      >\n        {siteTitle}\n      </Link>\n    </h1>\n  </div>\n)\n\nexport default Header\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\nimport AppBar from \"./app-bar\"\n\nconst Layout = ({ children }: LayoutProps) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <AppBar siteTitle={data.site.siteMetadata.title} />\n        <div\n          css={css`\n            margin: 0 auto;\n            padding: ${rhythm(2)};\n            padding-top: ${rhythm(1.5)};\n          `}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\ninterface LayoutProps {\n  children: React.ReactNode\n}\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({\n  description,\n  lang = \"en\",\n  meta = [],\n  keywords = [],\n  title,\n}: SEOProps) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\ninterface SEOProps {\n  description: string\n  lang?: string\n  meta?: Array<any>\n  keywords?: Array<string>\n  title: string\n}\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}