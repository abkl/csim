{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/components/seo.tsx"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","_components_seo__WEBPACK_IMPORTED_MODULE_2__","title","description","SEO","_ref","_ref$lang","lang","_ref$meta","meta","_ref$keywords","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"qIAYeA,UARM,kBACnBC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,SAAA,KACEJ,OAAAC,EAAA,EAAAD,CAACK,EAAA,EAAD,CAAKC,MAAM,iBAAiBC,YAAY,aACxCP,OAAAC,EAAA,EAAAD,CAAA,uBACAA,OAAAC,EAAA,EAAAD,CAAA,6JCyEWQ,IA7Ef,SAAAC,GAMa,IALXF,EAKWE,EALXF,YAKWG,EAAAD,EAJXE,YAIW,IAAAD,EAJJ,KAIIA,EAAAE,EAAAH,EAHXI,YAGW,IAAAD,EAHJ,GAGIA,EAAAE,EAAAL,EAFXM,gBAEW,IAAAD,EAFA,GAEAA,EADXR,EACWG,EADXH,MAEA,OACEN,OAAAC,EAAA,EAAAD,CAACgB,EAAA,YAAD,CACEC,MAAOC,EACPC,OAAQ,SAAAC,GACN,IAAMC,EACJd,GAAea,EAAKE,KAAKC,aAAahB,YACxC,OACEP,OAAAC,EAAA,EAAAD,CAACwB,EAAArB,EAAD,CACEsB,eAAgB,CACdd,QAEFL,MAAOA,EACPoB,cAAa,QAAUN,EAAKE,KAAKC,aAAajB,MAC9CO,KAAM,CACJ,CACEc,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAStB,GAEX,CACEuB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAAStB,GAEX,CACEqB,KAAI,sBACJC,QAASP,IAGVU,OACChB,EAASiB,OAAS,EACd,CACEL,KAAI,WACJC,QAASb,EAASkB,KAAT,OAEX,IAELF,OAAOlB,MAtDlBO,KAAAc,KAuEJ,IAAMhB,EAAY","file":"component---src-pages-404-tsx-a0a4e3ce6e0d60a12ff4.js","sourcesContent":["import React from \"react\"\n\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <>\n    <SEO title=\"404: Not found\" description=\"404 page\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({\n  description,\n  lang = \"en\",\n  meta = [],\n  keywords = [],\n  title,\n}: SEOProps) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\ninterface SEOProps {\n  description: string\n  lang?: string\n  meta?: any[]\n  keywords?: string[]\n  title: string\n}\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}