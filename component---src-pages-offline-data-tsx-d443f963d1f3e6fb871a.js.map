{"version":3,"sources":["webpack:///./src/pages/offline-data.tsx","webpack:///./src/components/primatives/button.tsx","webpack:///./src/components/primatives/modal.tsx","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js"],"names":["proxyurl","matchScoutUrl","pitScoutUrl","updateStorage","_ref","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","key","data","ogData","wrap","_context","prev","next","localforage","getItem","sent","Array","isArray","setItem","map","v","id","Object","assign","submitted","then","t","console","log","stop","this","_x","_x2","apply","arguments","OfflinePage","_useState","useState","matchScout","pitScout","items","setItems","fetchData","_ref2","_callee2","matchScoutData","pitScoutData","_context2","_useState2","error","modalOpen","loading","modalState","setModalState","useEffect","_emotion_core__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6___default","Fragment","react_table__WEBPACK_IMPORTED_MODULE_9__","filter","pageSize","columns","Header","Cell","_ref3","original","_components_primatives_button__WEBPACK_IMPORTED_MODULE_8__","onClick","axios","post","JSON","stringify","headers","content-type","catch","accessor","props","value","toString","_ref4","_components_primatives_modal__WEBPACK_IMPORTED_MODULE_12__","onClose","Button","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","theme","primary","red","ModalOverlay","name","styles","ModalPaper","Modal","children","ref","useRef","handler","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","useLayoutEffect","body","style","overflow","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","global","undefined","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","module","runtime","regeneratorRuntime","exports","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","result","done","keys","object","push","reverse","length","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","return","TypeError","info","pushTryEntry","locs","iteratorMethod","Function","__webpack_require__","g","hadRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","asyncGeneratorStep","gen","_next","_throw","args"],"mappings":"oSAOMA,EAAW,2CACXC,EACJ,mGACIC,EACJ,kGACIC,EAAa,eAAAC,EAAAC,IAAAC,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,EAAaC,GAApB,IAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCC,IAAYC,QAAQR,GADrB,OACdE,EADcE,EAAAK,KAEhBC,MAAMC,QAAQT,IAChBK,IACGK,QACCZ,EACAE,EAAOW,IAAI,SAAAC,GAAC,OAAKA,EAAEC,KAAOd,EAAKc,GAAdC,OAAAC,OAAA,GAAwBhB,EAAxB,CAA8BiB,WAAW,IAASJ,KAEpEK,KAAK,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,KARP,wBAAAhB,EAAAmB,SAAAxB,EAAAyB,SAAH,gBAAAC,EAAAC,GAAA,OAAAhC,EAAAiC,MAAAH,KAAAI,YAAA,GAUJ,SAASC,IAAc,IAAAC,EACVC,mBAAS,CACjCC,WAAY,GACZC,SAAU,KAFLC,EAD6BJ,EAAA,GACtBK,EADsBL,EAAA,GAK9BM,EAAS,eAAAC,EAAA1C,IAAAC,EAAAC,EAAAC,KAAG,SAAAwC,IAAA,IAAAC,EAAAC,EAAA,OAAA5C,EAAAC,EAAAM,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAAnC,KAAA,EACaC,IAAYC,QAAQ,kBADjC,cACV+B,EADUE,EAAAhC,KAAAgC,EAAAnC,KAAA,EAEWC,IAAYC,QAAQ,gBAF/B,OAEVgC,EAFUC,EAAAhC,KAGhB0B,EAAS,CACPH,WAAYO,GAA6C,GACzDN,SAAUO,GAAyC,KALrC,wBAAAC,EAAAlB,SAAAe,EAAAd,SAAH,yBAAAa,EAAAV,MAAAH,KAAAI,YAAA,GALqBc,EAaAX,mBAAS,CAC3CY,OAAO,EACPC,WAAW,EACXC,SAAS,IAHJC,EAb6BJ,EAAA,GAajBK,EAbiBL,EAAA,GAqBpC,OAHAM,oBAAU,WACRZ,KACC,IAEDpB,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAArD,EAAAsD,SAAA,KACEnC,OAAAiC,EAAA,EAAAjC,CAAA,gDACAA,OAAAiC,EAAA,EAAAjC,CAAA,2BACCK,QAAQC,IAAIY,EAAMF,YAClBtB,MAAMC,QAAQuB,EAAMF,YACnBhB,OAAAiC,EAAA,EAAAjC,CAACoC,EAAA,EAAD,CACEnD,KAAMiC,EAAMD,SAASoB,OAAO,SAAAjC,GAAC,OAAU,OAANA,IACjCkC,SAAU,GACVC,QAAS,CACP,CACEC,OAAQ,aACRC,KAFF,SAAAC,GAEwC,IAA/BC,EAA+BD,EAA/BC,SACL,OACE3C,OAAAiC,EAAA,EAAAjC,CAAC4C,EAAA,EAAD,CACEC,QAAS,WACPxC,QAAQC,IAAI,eACZyB,EAAc,CACZH,WAAW,EACXC,SAAS,EACTF,OAAO,IAETmB,IACGC,KACCzE,EAAWE,EACXwE,KAAKC,UAAUN,GACf,CACEO,QAAS,CAAEC,eAAgB,UAG9BhD,KAAK,WACJE,QAAQC,IAAI,oBACZ7B,EAAc,eAAgBkE,GAC3BxC,KAAK,kBACJ4B,EAAc,CACZH,WAAW,EACXC,SAAS,EACTF,OAAO,MAGVxB,KAAK,kBAAMiB,QAEfgC,MAAM,kBACLrB,EAAc,CACZH,WAAW,EACXC,SAAS,EACTF,OAAO,QAhCjB,YA0CN,CAAEa,OAAQ,cAAea,SAAU,eACnC,CACEb,OAAQ,YACRa,SAAU,YACVZ,KAHF,SAGOa,GACH,OAAOtD,OAAAiC,EAAA,EAAAjC,CAAA,SAAIsD,EAAMC,MAAMC,iBAM/B,OAEFxD,OAAAiC,EAAA,EAAAjC,CAAA,8BACCN,MAAMC,QAAQuB,EAAMF,YACnBhB,OAAAiC,EAAA,EAAAjC,CAACoC,EAAA,EAAD,CACEnD,KAAMiC,EAAMF,WAAWqB,OAAO,SAAAjC,GAAC,OAAU,OAANA,IACnCkC,SAAU,GACVC,QAAS,CACP,CACEC,OAAQ,aACRC,KAFF,SAAAgB,GAEwC,IAA/Bd,EAA+Bc,EAA/Bd,SACL,OACE3C,OAAAiC,EAAA,EAAAjC,CAAC4C,EAAA,EAAD,CACEC,QAAS,WACPxC,QAAQC,IAAI,eACZyB,EAAc,CACZH,WAAW,EACXC,SAAS,EACTF,OAAO,IAETmB,IACGC,KACCzE,EAAWC,EACXyE,KAAKC,UAAUN,GACf,CACEO,QAAS,CAAEC,eAAgB,UAG9BhD,KAAK,WACJE,QAAQC,IAAI,oBACZ7B,EAAc,iBAAkBkE,GAC7BxC,KAAK,kBACJ4B,EAAc,CACZH,WAAW,EACXC,SAAS,EACTF,OAAO,MAGVxB,KAAK,kBAAMiB,QAEfgC,MAAM,kBACLrB,EAAc,CACZH,WAAW,EACXC,SAAS,EACTF,OAAO,QAhCjB,YA0CN,CAAEa,OAAQ,cAAea,SAAU,eACnC,CAAEb,OAAQ,eAAgBa,SAAU,gBACpC,CACEb,OAAQ,YACRa,SAAU,YACVZ,KAHF,SAGOa,GACH,OAAOtD,OAAAiC,EAAA,EAAAjC,CAAA,SAAIsD,EAAMC,MAAMC,iBAM/B,OAED1B,EAAWF,WACV5B,OAAAiC,EAAA,EAAAjC,CAAC0D,EAAA,EAAD,CACEC,QAAS,kBACP5B,EAAc,CAAEJ,OAAO,EAAOC,WAAW,EAAOC,SAAS,MAG3D7B,OAAAiC,EAAA,EAAAjC,CAAA,yBACAA,OAAAiC,EAAA,EAAAjC,CAAA,SACI8B,EAAWH,OAAUG,EAAWD,QAA8B,GAApB,mBAE9C7B,OAAAiC,EAAA,EAAAjC,CAAA,SAAI8B,EAAWD,QAAU,cAAgB,IACzC7B,OAAAiC,EAAA,EAAAjC,CAAA,SAAI8B,EAAWH,MAAQ,gCAAkC,qDCxL7DiC,EAAS5D,OAAA6D,EAAA,EAAA7D,CAAA,UAAH8D,OAAA,YAAG9D,CAAH,0HAIU,SAAAsD,GAAK,OAAIA,EAAMS,MAAMC,QAAQC,KAJvC,+HAYY,SAAAX,GAAK,OAAIA,EAAMS,MAAMC,QAAQC,KAZzC,kBAiBGL,kGCnBTM,EAAelE,OAAA6D,EAAA,EAAA7D,CAAA,OAAH8D,OAAA,YAAG9D,CAAH,CAAAmE,KAAA,UAAAC,OAAA,6JAYZC,EAAarE,OAAA6D,EAAA,EAAA7D,CAAA,OAAH8D,OAAA,YAAG9D,CAAH,CAAAmE,KAAA,UAAAC,OAAA,oIA0CD,SAASE,EAAT5F,GAMZ,IALDiF,EAKCjF,EALDiF,QACAY,EAIC7F,EAJD6F,SAKMC,EAAMC,iBAAO,MAGnB,OAzCF,SACED,EACAE,GAEA1C,oBAAU,WACR,IAAM2C,EAAW,SAACC,GAEXJ,EAAIK,UAAWL,EAAIK,QAAQC,SAASF,EAAMd,SAI/CY,EAAQE,IAMV,OAHAG,SAASC,iBAAiB,YAAaL,GACvCI,SAASC,iBAAiB,aAAcL,GAEjC,WACLI,SAASE,oBAAoB,YAAaN,GAC1CI,SAASE,oBAAoB,aAAcN,KAE5C,IAkBHO,CAAkBV,EAAK,kBAAMb,MAf7BwB,0BAAgB,WAId,OAFAJ,SAASK,KAAKC,MAAMC,SAAW,SAExB,kBAAOP,SAASK,KAAKC,MAAMC,SAAW,YAC5C,IAaDtF,OAAAuF,EAAA,EAAAvF,CAACkE,EAAD,KACElE,OAAAuF,EAAA,EAAAvF,CAACqE,EAAD,CAAYG,IAAKA,GAAMD,yBC9D7B,SAAAiB,GACA,aAEA,IAEAC,EAFAC,EAAA1F,OAAA2F,UACAC,EAAAF,EAAAG,eAEAC,EAAA,mBAAAC,cAAA,GACAC,EAAAF,EAAAG,UAAA,aACAC,EAAAJ,EAAAK,eAAA,kBACAC,EAAAN,EAAAO,aAAA,gBAEAC,EAAA,iBAAAC,EACAC,EAAAhB,EAAAiB,mBACA,GAAAD,EACAF,IAGAC,EAAAG,QAAAF,OAJA,EAaAA,EAAAhB,EAAAiB,mBAAAH,EAAAC,EAAAG,QAAA,IAcAvH,OAoBA,IAAAwH,EAAA,iBACAC,EAAA,iBACAC,EAAA,YACAC,EAAA,YAIAC,EAAA,GAYAC,EAAA,GACAA,EAAAhB,GAAA,WACA,OAAAxF,MAGA,IAAAyG,EAAAjH,OAAAkH,eACAC,EAAAF,OAAAG,EAAA,MACAD,GACAA,IAAAzB,GACAE,EAAAyB,KAAAF,EAAAnB,KAGAgB,EAAAG,GAGA,IAAAG,EAAAC,EAAA5B,UACA6B,EAAA7B,UAAA3F,OAAAyH,OAAAT,GACAU,EAAA/B,UAAA2B,EAAAK,YAAAJ,EACAA,EAAAI,YAAAD,EACAH,EAAAnB,GACAsB,EAAAE,YAAA,oBAYApB,EAAAqB,oBAAA,SAAAC,GACA,IAAAC,EAAA,mBAAAD,KAAAH,YACA,QAAAI,IACAA,IAAAL,GAGA,uBAAAK,EAAAH,aAAAG,EAAA5D,QAIAqC,EAAA1H,KAAA,SAAAgJ,GAUA,OATA9H,OAAAgI,eACAhI,OAAAgI,eAAAF,EAAAP,IAEAO,EAAAG,UAAAV,EACAnB,KAAA0B,IACAA,EAAA1B,GAAA,sBAGA0B,EAAAnC,UAAA3F,OAAAyH,OAAAH,GACAQ,GAOAtB,EAAA0B,MAAA,SAAAC,GACA,OAAYC,QAAAD,IAsEZE,EAAAC,EAAA3C,WACA2C,EAAA3C,UAAAO,GAAA,WACA,OAAA1F,MAEAgG,EAAA8B,gBAKA9B,EAAA+B,MAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAN,EACAnJ,EAAAqJ,EAAAC,EAAAC,EAAAC,IAGA,OAAAnC,EAAAqB,oBAAAY,GACAG,EACAA,EAAAtJ,OAAAa,KAAA,SAAA0I,GACA,OAAAA,EAAAC,KAAAD,EAAAtF,MAAAqF,EAAAtJ,UAsKA+I,EAAAf,GAEAA,EAAAlB,GAAA,YAOAkB,EAAAtB,GAAA,WACA,OAAAxF,MAGA8G,EAAA9D,SAAA,WACA,4BAkCAgD,EAAAuC,KAAA,SAAAC,GACA,IAAAD,EAAA,GACA,QAAA/J,KAAAgK,EACAD,EAAAE,KAAAjK,GAMA,OAJA+J,EAAAG,UAIA,SAAA5J,IACA,KAAAyJ,EAAAI,QAAA,CACA,IAAAnK,EAAA+J,EAAAK,MACA,GAAApK,KAAAgK,EAGA,OAFA1J,EAAAiE,MAAAvE,EACAM,EAAAwJ,MAAA,EACAxJ,EAQA,OADAA,EAAAwJ,MAAA,EACAxJ,IAsCAkH,EAAAY,SAMAiC,EAAA1D,UAAA,CACAgC,YAAA0B,EAEAC,MAAA,SAAAC,GAcA,GAbA/I,KAAAnB,KAAA,EACAmB,KAAAlB,KAAA,EAGAkB,KAAAf,KAAAe,KAAAgJ,MAAA/D,EACAjF,KAAAsI,MAAA,EACAtI,KAAAiJ,SAAA,KAEAjJ,KAAAkJ,OAAA,OACAlJ,KAAA2H,IAAA1C,EAEAjF,KAAAmJ,WAAAC,QAAAC,IAEAN,EACA,QAAApF,KAAA3D,KAEA,MAAA2D,EAAA2F,OAAA,IACAlE,EAAAyB,KAAA7G,KAAA2D,KACA4F,OAAA5F,EAAA6F,MAAA,MACAxJ,KAAA2D,GAAAsB,IAMAlF,KAAA,WACAC,KAAAsI,MAAA,EAEA,IACAmB,EADAzJ,KAAAmJ,WAAA,GACAO,WACA,aAAAD,EAAAE,KACA,MAAAF,EAAA9B,IAGA,OAAA3H,KAAA4J,MAGAC,kBAAA,SAAAC,GACA,GAAA9J,KAAAsI,KACA,MAAAwB,EAGA,IAAAC,EAAA/J,KACA,SAAAgK,EAAAC,EAAAC,GAYA,OAXAC,EAAAR,KAAA,QACAQ,EAAAxC,IAAAmC,EACAC,EAAAjL,KAAAmL,EAEAC,IAGAH,EAAAb,OAAA,OACAa,EAAApC,IAAA1C,KAGAiF,EAGA,QAAAE,EAAApK,KAAAmJ,WAAAR,OAAA,EAA8CyB,GAAA,IAAQA,EAAA,CACtD,IAAAC,EAAArK,KAAAmJ,WAAAiB,GACAD,EAAAE,EAAAX,WAEA,YAAAW,EAAAC,OAIA,OAAAN,EAAA,OAGA,GAAAK,EAAAC,QAAAtK,KAAAnB,KAAA,CACA,IAAA0L,EAAAnF,EAAAyB,KAAAwD,EAAA,YACAG,EAAApF,EAAAyB,KAAAwD,EAAA,cAEA,GAAAE,GAAAC,EAAA,CACA,GAAAxK,KAAAnB,KAAAwL,EAAAI,SACA,OAAAT,EAAAK,EAAAI,UAAA,GACa,GAAAzK,KAAAnB,KAAAwL,EAAAK,WACb,OAAAV,EAAAK,EAAAK,iBAGW,GAAAH,GACX,GAAAvK,KAAAnB,KAAAwL,EAAAI,SACA,OAAAT,EAAAK,EAAAI,UAAA,OAGW,KAAAD,EAMX,UAAAG,MAAA,0CALA,GAAA3K,KAAAnB,KAAAwL,EAAAK,WACA,OAAAV,EAAAK,EAAAK,gBAUAE,OAAA,SAAAjB,EAAAhC,GACA,QAAAyC,EAAApK,KAAAmJ,WAAAR,OAAA,EAA8CyB,GAAA,IAAQA,EAAA,CACtD,IAAAC,EAAArK,KAAAmJ,WAAAiB,GACA,GAAAC,EAAAC,QAAAtK,KAAAnB,MACAuG,EAAAyB,KAAAwD,EAAA,eACArK,KAAAnB,KAAAwL,EAAAK,WAAA,CACA,IAAAG,EAAAR,EACA,OAIAQ,IACA,UAAAlB,GACA,aAAAA,IACAkB,EAAAP,QAAA3C,GACAA,GAAAkD,EAAAH,aAGAG,EAAA,MAGA,IAAAV,EAAAU,IAAAnB,WAAA,GAIA,OAHAS,EAAAR,OACAQ,EAAAxC,MAEAkD,GACA7K,KAAAkJ,OAAA,OACAlJ,KAAAlB,KAAA+L,EAAAH,WACAnE,GAGAvG,KAAA8K,SAAAX,IAGAW,SAAA,SAAAX,EAAAY,GACA,aAAAZ,EAAAR,KACA,MAAAQ,EAAAxC,IAcA,MAXA,UAAAwC,EAAAR,MACA,aAAAQ,EAAAR,KACA3J,KAAAlB,KAAAqL,EAAAxC,IACO,WAAAwC,EAAAR,MACP3J,KAAA4J,KAAA5J,KAAA2H,IAAAwC,EAAAxC,IACA3H,KAAAkJ,OAAA,SACAlJ,KAAAlB,KAAA,OACO,WAAAqL,EAAAR,MAAAoB,IACP/K,KAAAlB,KAAAiM,GAGAxE,GAGAyE,OAAA,SAAAN,GACA,QAAAN,EAAApK,KAAAmJ,WAAAR,OAAA,EAA8CyB,GAAA,IAAQA,EAAA,CACtD,IAAAC,EAAArK,KAAAmJ,WAAAiB,GACA,GAAAC,EAAAK,eAGA,OAFA1K,KAAA8K,SAAAT,EAAAX,WAAAW,EAAAU,UACA1B,EAAAgB,GACA9D,IAKA3D,MAAA,SAAA0H,GACA,QAAAF,EAAApK,KAAAmJ,WAAAR,OAAA,EAA8CyB,GAAA,IAAQA,EAAA,CACtD,IAAAC,EAAArK,KAAAmJ,WAAAiB,GACA,GAAAC,EAAAC,WAAA,CACA,IAAAH,EAAAE,EAAAX,WACA,aAAAS,EAAAR,KAAA,CACA,IAAAsB,EAAAd,EAAAxC,IACA0B,EAAAgB,GAEA,OAAAY,GAMA,UAAAN,MAAA,0BAGAO,cAAA,SAAAC,EAAAC,EAAAC,GAaA,OAZArL,KAAAiJ,SAAA,CACAxD,SAAAmB,EAAAuE,GACAC,aACAC,WAGA,SAAArL,KAAAkJ,SAGAlJ,KAAA2H,IAAA1C,GAGAsB,IAnqBA,SAAA5H,EAAAqJ,EAAAC,EAAAC,EAAAC,GAEA,IAAAmD,EAAArD,KAAA9C,qBAAA6B,EAAAiB,EAAAjB,EACAuE,EAAA/L,OAAAyH,OAAAqE,EAAAnG,WACA4E,EAAA,IAAAlB,EAAAV,GAAA,IAMA,OAFAoD,EAAAC,QAkMA,SAAAxD,EAAAE,EAAA6B,GACA,IAAA0B,EAAAtF,EAEA,gBAAA+C,EAAAvB,GACA,GAAA8D,IAAApF,EACA,UAAAsE,MAAA,gCAGA,GAAAc,IAAAnF,EAAA,CACA,aAAA4C,EACA,MAAAvB,EAKA,OAAA+D,IAMA,IAHA3B,EAAAb,SACAa,EAAApC,QAEA,CACA,IAAAsB,EAAAc,EAAAd,SACA,GAAAA,EAAA,CACA,IAAA0C,EAAAC,EAAA3C,EAAAc,GACA,GAAA4B,EAAA,CACA,GAAAA,IAAApF,EAAA,SACA,OAAAoF,GAIA,YAAA5B,EAAAb,OAGAa,EAAA9K,KAAA8K,EAAAf,MAAAe,EAAApC,SAES,aAAAoC,EAAAb,OAAA,CACT,GAAAuC,IAAAtF,EAEA,MADAsF,EAAAnF,EACAyD,EAAApC,IAGAoC,EAAAF,kBAAAE,EAAApC,SAES,WAAAoC,EAAAb,QACTa,EAAAa,OAAA,SAAAb,EAAApC,KAGA8D,EAAApF,EAEA,IAAA8D,EAAA0B,EAAA7D,EAAAE,EAAA6B,GACA,cAAAI,EAAAR,KAAA,CAOA,GAJA8B,EAAA1B,EAAAzB,KACAhC,EACAF,EAEA+D,EAAAxC,MAAApB,EACA,SAGA,OACAxD,MAAAoH,EAAAxC,IACAW,KAAAyB,EAAAzB,MAGS,UAAA6B,EAAAR,OACT8B,EAAAnF,EAGAyD,EAAAb,OAAA,QACAa,EAAApC,IAAAwC,EAAAxC,OA1QAmE,CAAA9D,EAAAE,EAAA6B,GAEAwB,EAcA,SAAAM,EAAAE,EAAAC,EAAArE,GACA,IACA,OAAcgC,KAAA,SAAAhC,IAAAoE,EAAAlF,KAAAmF,EAAArE,IACT,MAAAsE,GACL,OAActC,KAAA,QAAAhC,IAAAsE,IAiBd,SAAAjF,KACA,SAAAE,KACA,SAAAH,KA4BA,SAAAc,EAAA1C,GACA,0BAAAiE,QAAA,SAAAF,GACA/D,EAAA+D,GAAA,SAAAvB,GACA,OAAA3H,KAAAwL,QAAAtC,EAAAvB,MAoCA,SAAAG,EAAAyD,GAgCA,IAAAW,EAgCAlM,KAAAwL,QA9BA,SAAAtC,EAAAvB,GACA,SAAAwE,IACA,WAAAC,QAAA,SAAAC,EAAAC,IAnCA,SAAAC,EAAArD,EAAAvB,EAAA0E,EAAAC,GACA,IAAAnC,EAAA0B,EAAAN,EAAArC,GAAAqC,EAAA5D,GACA,aAAAwC,EAAAR,KAEO,CACP,IAAAtB,EAAA8B,EAAAxC,IACA5E,EAAAsF,EAAAtF,MACA,OAAAA,GACA,iBAAAA,GACAqC,EAAAyB,KAAA9D,EAAA,WACAqJ,QAAAC,QAAAtJ,EAAA6E,SAAAjI,KAAA,SAAAoD,GACAwJ,EAAA,OAAAxJ,EAAAsJ,EAAAC,IACW,SAAAL,GACXM,EAAA,QAAAN,EAAAI,EAAAC,KAIAF,QAAAC,QAAAtJ,GAAApD,KAAA,SAAA6M,GAIAnE,EAAAtF,MAAAyJ,EACAH,EAAAhE,IACS,SAAAlH,GAGT,OAAAoL,EAAA,QAAApL,EAAAkL,EAAAC,KAvBAA,EAAAnC,EAAAxC,KAiCA4E,CAAArD,EAAAvB,EAAA0E,EAAAC,KAIA,OAAAJ,EAaAA,IAAAvM,KACAwM,EAGAA,GACAA,KA+GA,SAAAP,EAAA3C,EAAAc,GACA,IAAAb,EAAAD,EAAAxD,SAAAsE,EAAAb,QACA,GAAAA,IAAAjE,EAAA,CAKA,GAFA8E,EAAAd,SAAA,KAEA,UAAAc,EAAAb,OAAA,CACA,GAAAD,EAAAxD,SAAAgH,SAGA1C,EAAAb,OAAA,SACAa,EAAApC,IAAA1C,EACA2G,EAAA3C,EAAAc,GAEA,UAAAA,EAAAb,QAGA,OAAA3C,EAIAwD,EAAAb,OAAA,QACAa,EAAApC,IAAA,IAAA+E,UACA,kDAGA,OAAAnG,EAGA,IAAA4D,EAAA0B,EAAA3C,EAAAD,EAAAxD,SAAAsE,EAAApC,KAEA,aAAAwC,EAAAR,KAIA,OAHAI,EAAAb,OAAA,QACAa,EAAApC,IAAAwC,EAAAxC,IACAoC,EAAAd,SAAA,KACA1C,EAGA,IAAAoG,EAAAxC,EAAAxC,IAEA,OAAAgF,EAOAA,EAAArE,MAGAyB,EAAAd,EAAAmC,YAAAuB,EAAA5J,MAGAgH,EAAAjL,KAAAmK,EAAAoC,QAQA,WAAAtB,EAAAb,SACAa,EAAAb,OAAA,OACAa,EAAApC,IAAA1C,GAUA8E,EAAAd,SAAA,KACA1C,GANAoG,GA3BA5C,EAAAb,OAAA,QACAa,EAAApC,IAAA,IAAA+E,UAAA,oCACA3C,EAAAd,SAAA,KACA1C,GAoDA,SAAAqG,EAAAC,GACA,IAAAxC,EAAA,CAAiBC,OAAAuC,EAAA,IAEjB,KAAAA,IACAxC,EAAAI,SAAAoC,EAAA,IAGA,KAAAA,IACAxC,EAAAK,WAAAmC,EAAA,GACAxC,EAAAU,SAAA8B,EAAA,IAGA7M,KAAAmJ,WAAAV,KAAA4B,GAGA,SAAAhB,EAAAgB,GACA,IAAAF,EAAAE,EAAAX,YAAA,GACAS,EAAAR,KAAA,gBACAQ,EAAAxC,IACA0C,EAAAX,WAAAS,EAGA,SAAAtB,EAAAV,GAIAnI,KAAAmJ,WAAA,EAAwBmB,OAAA,SACxBnC,EAAAiB,QAAAwD,EAAA5M,MACAA,KAAA8I,OAAA,GA8BA,SAAAlC,EAAAuE,GACA,GAAAA,EAAA,CACA,IAAA2B,EAAA3B,EAAA3F,GACA,GAAAsH,EACA,OAAAA,EAAAjG,KAAAsE,GAGA,sBAAAA,EAAArM,KACA,OAAAqM,EAGA,IAAA5B,MAAA4B,EAAAxC,QAAA,CACA,IAAAyB,GAAA,EAAAtL,EAAA,SAAAA,IACA,OAAAsL,EAAAe,EAAAxC,QACA,GAAAvD,EAAAyB,KAAAsE,EAAAf,GAGA,OAFAtL,EAAAiE,MAAAoI,EAAAf,GACAtL,EAAAwJ,MAAA,EACAxJ,EAOA,OAHAA,EAAAiE,MAAAkC,EACAnG,EAAAwJ,MAAA,EAEAxJ,GAGA,OAAAA,UAKA,OAAYA,KAAA4M,GAIZ,SAAAA,IACA,OAAY3I,MAAAkC,EAAAqD,MAAA,IAxfZ,CAssBA,WACA,OAAAtI,MAAA,iBAAAkI,WADA,IAEG6E,SAAA,cAAAA,yBC/sBHhH,EAAAG,QAAiB8G,EAAQ,0BCSzB,IAAAC,EAAA,WACA,OAAAjN,MAAA,iBAAAkI,WADA,IAEC6E,SAAA,cAAAA,GAIDG,EAAAD,EAAAhH,oBACAzG,OAAA2N,oBAAAF,GAAAG,QAAA,yBAGAC,EAAAH,GAAAD,EAAAhH,mBAOA,GAJAgH,EAAAhH,wBAAAhB,EAEAc,EAAAG,QAAiB8G,EAAQ,KAEzBE,EAEAD,EAAAhH,mBAAAoH,OAGA,WACAJ,EAAAhH,mBACG,MAAAqH,GACHL,EAAAhH,wBAAAhB,sBClCA,SAAAsI,EAAAC,EAAAnB,EAAAC,EAAAmB,EAAAC,EAAAlP,EAAAmJ,GACA,IACA,IAAAgF,EAAAa,EAAAhP,GAAAmJ,GACA5E,EAAA4J,EAAA5J,MACG,MAAA5B,GAEH,YADAmL,EAAAnL,GAIAwL,EAAArE,KACA+D,EAAAtJ,GAEAqJ,QAAAC,QAAAtJ,GAAApD,KAAA8N,EAAAC,GAwBA3H,EAAAG,QApBA,SAAA6F,GACA,kBACA,IAAA7D,EAAAlI,KACA2N,EAAAvN,UACA,WAAAgM,QAAA,SAAAC,EAAAC,GACA,IAAAkB,EAAAzB,EAAA5L,MAAA+H,EAAAyF,GAEA,SAAAF,EAAA1K,GACAwK,EAAAC,EAAAnB,EAAAC,EAAAmB,EAAAC,EAAA,OAAA3K,GAGA,SAAA2K,EAAAzB,GACAsB,EAAAC,EAAAnB,EAAAC,EAAAmB,EAAAC,EAAA,QAAAzB,GAGAwB,OAAAxI","file":"component---src-pages-offline-data-tsx-d443f963d1f3e6fb871a.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport localforage from \"localforage\"\nimport Button from \"../components/primatives/button\"\nimport ReactTable from \"react-table\"\nimport \"react-table/react-table.css\"\nimport axios from \"axios\"\nimport Modal from \"../components/primatives/modal\"\nconst proxyurl = \"https://cors-app-scouting.herokuapp.com/\"\nconst matchScoutUrl =\n  \"https://script.google.com/macros/s/AKfycbxd9o5VOvlJT4SqTeJTAoUmT9WNxmagGafiTARnFCyU7bgPlcnR/exec\"\nconst pitScoutUrl =\n  \"https://script.google.com/macros/s/AKfycbzpOJMML-rkyz_HB-GRstlAke0OayBeMEFVW21a04lpD9TJrKc/exec\"\nconst updateStorage = async (key: string, data: { [s: string]: any }) => {\n  const ogData = await localforage.getItem(key)\n  if (Array.isArray(ogData))\n    localforage\n      .setItem(\n        key,\n        ogData.map(v => (v.id === data.id ? { ...data, submitted: true } : v))\n      )\n      .then(t => console.log(t))\n}\nexport default function OfflinePage() {\n  const [items, setItems] = useState({\n    matchScout: [],\n    pitScout: [],\n  })\n  const fetchData = async () => {\n    const matchScoutData = await localforage.getItem(\"match-scouting\")\n    const pitScoutData = await localforage.getItem(\"pit-scouting\")\n    setItems({\n      matchScout: matchScoutData ? (matchScoutData as any[]) : [],\n      pitScout: pitScoutData ? (pitScoutData as any[]) : [],\n    })\n  }\n  const [modalState, setModalState] = useState({\n    error: false,\n    modalOpen: false,\n    loading: false,\n  })\n  useEffect(() => {\n    fetchData()\n  }, [])\n  return (\n    <>\n      <h1>All the data you've ever submitted</h1>\n      <h2> Pitscouting </h2>\n      {console.log(items.matchScout)}\n      {Array.isArray(items.matchScout) ? (\n        <ReactTable\n          data={items.pitScout.filter(t => t !== null)}\n          pageSize={10}\n          columns={[\n            {\n              Header: \"(re)Submit\",\n              Cell({ original }: { original: any }) {\n                return (\n                  <Button\n                    onClick={() => {\n                      console.log(\"doing stuff\")\n                      setModalState({\n                        modalOpen: true,\n                        loading: true,\n                        error: false,\n                      })\n                      axios\n                        .post(\n                          proxyurl + pitScoutUrl,\n                          JSON.stringify(original),\n                          {\n                            headers: { \"content-type\": \"json\" },\n                          }\n                        )\n                        .then(() => {\n                          console.log(\"updating storage\")\n                          updateStorage(\"pit-scouting\", original)\n                            .then(() =>\n                              setModalState({\n                                modalOpen: true,\n                                loading: false,\n                                error: false,\n                              })\n                            )\n                            .then(() => fetchData())\n                        })\n                        .catch(() =>\n                          setModalState({\n                            modalOpen: true,\n                            loading: false,\n                            error: true,\n                          })\n                        )\n                    }}\n                  >\n                    Submit\n                  </Button>\n                )\n              },\n            },\n            { Header: \"Team Number\", accessor: \"Team Number\" },\n            {\n              Header: \"Submitted\",\n              accessor: \"submitted\",\n              Cell(props: { value: any }) {\n                return <p>{props.value.toString()}</p>\n              },\n            },\n          ]}\n        />\n      ) : (\n        \"none\"\n      )}\n      <h2> Match Scouting </h2>\n      {Array.isArray(items.matchScout) ? (\n        <ReactTable\n          data={items.matchScout.filter(t => t !== null)}\n          pageSize={10}\n          columns={[\n            {\n              Header: \"(re)Submit\",\n              Cell({ original }: { original: any }) {\n                return (\n                  <Button\n                    onClick={() => {\n                      console.log(\"doing stuff\")\n                      setModalState({\n                        modalOpen: true,\n                        loading: true,\n                        error: false,\n                      })\n                      axios\n                        .post(\n                          proxyurl + matchScoutUrl,\n                          JSON.stringify(original),\n                          {\n                            headers: { \"content-type\": \"json\" },\n                          }\n                        )\n                        .then(() => {\n                          console.log(\"updating storage\")\n                          updateStorage(\"match-scouting\", original)\n                            .then(() =>\n                              setModalState({\n                                modalOpen: true,\n                                loading: false,\n                                error: false,\n                              })\n                            )\n                            .then(() => fetchData())\n                        })\n                        .catch(() =>\n                          setModalState({\n                            modalOpen: true,\n                            loading: false,\n                            error: true,\n                          })\n                        )\n                    }}\n                  >\n                    Submit\n                  </Button>\n                )\n              },\n            },\n            { Header: \"Team Number\", accessor: \"Team Number\" },\n            { Header: \"Match Number\", accessor: \"Match Number\" },\n            {\n              Header: \"Submitted\",\n              accessor: \"submitted\",\n              Cell(props: { value: any }) {\n                return <p>{props.value.toString()}</p>\n              },\n            },\n          ]}\n        />\n      ) : (\n        \"none\"\n      )}\n      {modalState.modalOpen && (\n        <Modal\n          onClose={() =>\n            setModalState({ error: false, modalOpen: false, loading: false })\n          }\n        >\n          <h1> Submitting</h1>\n          <p>\n            {!modalState.error && !modalState.loading ? \"Data summitted!\" : \"\"}\n          </p>\n          <p>{modalState.loading ? \"loading....\" : \"\"}</p>\n          <p>{modalState.error ? \"error! please try again later\" : \"\"}</p>\n        </Modal>\n      )}\n    </>\n  )\n}\n","import styled from \"@emotion/styled\"\n\ninterface ButtonProps {\n  primary: boolean\n}\nconst Button = styled.button`\n  min-width: 2rem;\n  padding: 6px 16px;\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.1), 0 6px 20px 0 rgba(0, 0, 0, 0.09);\n  border: 2px solid ${props => props.theme.primary.red};\n  border-radius: 4px;\n  outline: none;\n  font-size: 14px;\n  text-decoration: none;\n  background: none;\n  color: #c41e3a;\n  &:active {\n    background-color: ${props => props.theme.primary.red};\n    color: white;\n  }\n`\n\nexport default Button\n","import React, { useEffect, useRef, useLayoutEffect } from \"react\"\nimport styled from \"@emotion/styled\"\n\nconst ModalOverlay = styled.div`\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.65);\n  display: flex;\n  padding: 1em;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n`\nconst ModalPaper = styled.div`\n  background-color: white;\n  border-radius: 3px;\n  padding: 1rem 2rem;\n  text-align: center;\n  overflow: visible;\n  max-height: 100vh;\n  overflow-y: auto;\n`\n\n// Hooks\nfunction useOnClickOutside(\n  ref: React.RefObject<HTMLDivElement>,\n  handler: (a: any) => void\n) {\n  useEffect(() => {\n    const listener = (event: Event) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target as Node)) {\n        return\n      }\n\n      handler(event)\n    }\n\n    document.addEventListener(\"mousedown\", listener)\n    document.addEventListener(\"touchstart\", listener)\n\n    return () => {\n      document.removeEventListener(\"mousedown\", listener)\n      document.removeEventListener(\"touchstart\", listener)\n    }\n  }, []) // Empty array ensures that effect is only run on mount and unmount\n}\nfunction useLockBodyScroll() {\n  useLayoutEffect(() => {\n    // Prevent scrolling on mount\n    document.body.style.overflow = \"hidden\"\n    // Re-enable scrolling when component unmounts\n    return () => (document.body.style.overflow = \"visible\")\n  }, []) // Empty array ensures effect is only run on mount and unmount\n}\nexport default function Modal({\n  onClose,\n  children,\n}: {\n  onClose: () => void\n  children: React.ReactNode\n}) {\n  const ref = useRef(null)\n  useOnClickOutside(ref, () => onClose())\n  useLockBodyScroll()\n  return (\n    <ModalOverlay>\n      <ModalPaper ref={ref}>{children}</ModalPaper>\n    </ModalOverlay>\n  )\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;"],"sourceRoot":""}